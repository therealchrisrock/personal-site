package template

type DocumentHead struct {
	PageInfo     PageInfo     // Title, description, canonical URL
	OGMeta       OGMeta       // Open Graph metadata for social sharing
	TwitterMeta  TwitterMeta  // Twitter Card metadata
	SEOMeta      SEOMeta      // SEO metadata (keywords, robots)
	Assets       PageAssets   // Assets (favicon, theme color, CSS/JS links)
}

// PageInfo holds general information for the page
type PageInfo struct {
	Title        string // Page title
	Description  string // Meta description
	CanonicalURL string // Canonical URL
}

// OGMeta holds Open Graph metadata
type OGMeta struct {
	OGTitle       string // Open Graph title
	OGDescription string // Open Graph description
	OGImage       string // Open Graph image URL
	OGType        string // Open Graph type (e.g., "website" or "article")
	OGURL         string // Open Graph URL
}

// TwitterMeta holds Twitter Card metadata
type TwitterMeta struct {
	TwitterCard        string // Type of Twitter card (e.g., "summary_large_image")
	TwitterTitle       string // Twitter title
	TwitterDescription string // Twitter description
	TwitterImage       string // Twitter image URL
}

// SEOMeta holds SEO-related metadata
type SEOMeta struct {
	Keywords []string // Keywords for the page (for SEO)
	Author   string   // Author name
	Robots   string   // Robots meta tag (e.g., "index, follow")
}

// PageAssets holds assets such as favicon, CSS, and JS links
type PageAssets struct {
	ThemeColor string   // Theme color for mobile browsers
	CustomCSS  []string // Array of custom CSS URLs
	CustomJS   []string // Array of custom JS URLs
}

func DefaultHead() DocumentHead {
	return DocumentHead{
		PageInfo: PageInfo{
			Title:        "My Awesome Site",
			Description:  "Welcome to my awesome site! Explore our features.",
			CanonicalURL: "https://chrisrock.ca/",
		},
		OGMeta: OGMeta{
			OGTitle:       "Chris Rock",
			OGDescription: "Discover the amazing features of our website.",
			OGImage:       "https://example.com/static/img/default-og-image.jpg",
			OGType:        "website",
			OGURL:         "https://chrisrock.ca/",
		},
		TwitterMeta: TwitterMeta{
			TwitterCard:        "summary_large_image",
			TwitterTitle:       "My Awesome Site",
			TwitterDescription: "Discover the amazing features of our website.",
			TwitterImage:       "https://example.com/static/img/default-twitter-image.jpg",
		},
		SEOMeta: SEOMeta{
			Keywords: []string{"website", "awesome", "home"},
			Author:   "Site Admin",
			Robots:   "index, follow",
		},
		Assets: PageAssets{
			ThemeColor: "#ffffff",
			CustomCSS:  []string{"/static/css/main.css"},
			CustomJS:   []string{"/static/js/main.js"},
		},
	}
}


// GetHeadProp returns the value if not empty or the fallback if the value is empty.
func GetHeadProp[T comparable](value *T, fallback T) T {
	if value == nil {
		return fallback
	}
	return *value
}

templ Base(head DocumentHead) {
	$defaultHead := DefaultHead
    <html>
        <head>
			<meta charset="UTF-8"></meta>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"></meta>
			<link rel="stylesheet" href="/static/css/output.css"></link>
			<script type="module" src="/static/js/app.js"></script>
              <!-- Page Information -->
			<title>{ head.PageInfo.Title }</title>
			<meta name="description" content={ head.PageInfo.Description }>
			<link rel="canonical" href={ head.PageInfo.CanonicalURL }>

			<!-- Open Graph Meta Tags -->
			<meta property="og:title" content={ head.OGMeta.OGTitle }>
			<meta property="og:description" content={ head.OGMeta.OGDescription }>
			<meta property="og:image" content={ head.OGMeta.OGImage }>
			<meta property="og:type" content={ head.OGMeta.OGType }>
			<meta property="og:url" content={ head.OGMeta.OGURL }>

			<!-- Twitter Meta Tags -->
			<meta name="twitter:card" content={ head.TwitterMeta.TwitterCard }>
			<meta name="twitter:title" content={ head.TwitterMeta.TwitterTitle }>
			<meta name="twitter:description" content={ head.TwitterMeta.TwitterDescription }>
			<meta name="twitter:image" content={ head.TwitterMeta.TwitterImage }>

			<!-- SEO Meta Tags -->
			<meta name="keywords" content={ strings.Join(head.SEOMeta.Keywords, ", ") }>
			<meta name="author" content={ head.SEOMeta.Author }>
			<meta name="robots" content={ head.SEOMeta.Robots }>

			<!-- Page Assets -->
			<link rel="icon" href={ head.Assets.FaviconURL } type="image/x-icon">

			<!-- Custom CSS -->
			{ for _, css := range head.Assets.CustomCSS }
				<link rel="stylesheet" href={ css }>
			{ end }

			<!-- Custom JS -->
			{ for _, js := range head.Assets.CustomJS }
				<script defer src={ js }></script>
			{ end }
			<!-- Page Assets -->
			<link rel="icon" href="/favicon.ico" type="image/x-icon">

			<!-- Custom CSS -->
			{if len(head.Assets.CustomCSS) > 0}
				{for _, css := range head.Assets.CustomCSS}
					<link rel="stylesheet" href="{css}">
				{end}
			{else}
				{for _, css := range $defaultHead.Assets.CustomCSS}
					<link rel="stylesheet" href="{css}">
				{end}
			{end}

			<!-- Custom JS -->
			{if len(head.Assets.CustomJS) > 0}
				{for _, js := range head.Assets.CustomJS}
					<script defer src="{js}"></script>
				{end}
			{else}
				{for _, js := range $defaultHead.Assets.CustomJS}
					<script defer src="{js}"></script>
				{end}
			{end}
        </head>
        <body class="font-mono">
            <main class="p-6 grid gap-4">
                { children... }
            </main>
        </body>
    </html>
}
